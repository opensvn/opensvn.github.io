<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on 招财猫的博客</title>
    <link>https://gitop.cc/categories/Database/</link>
    <description>Recent content in Database on 招财猫的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 14 Apr 2019 15:40:23 +0800</lastBuildDate>
    
	<atom:link href="https://gitop.cc/categories/Database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Greenplum TPC-H测试</title>
      <link>https://gitop.cc/posts/tpch-test/</link>
      <pubDate>Sun, 14 Apr 2019 15:40:23 +0800</pubDate>
      
      <guid>https://gitop.cc/posts/tpch-test/</guid>
      <description>首先从官网下载TPC-H_Tools_v2.18.0.zip，解压 $ unzip TPC-H_Tools_v2.18.0.zip 进入dbgen目录，拷贝Makefile $ cd tpc/2.18.0_rc2/dbgen $ cp makefile.suite Makefile 修改Makefile，主要修改如下 CC = gcc DATABASE = ORACLE MACHINE = LINUX WORKLOAD = TPCH 编译dbgen $ make ./dbgen -h可以查看dbgen的用法 使用dbgen产生一些测试数据，-s表示scal</description>
    </item>
    
    <item>
      <title>gpdb官方安装包自定义安装路径的方法</title>
      <link>https://gitop.cc/posts/custom_gpdb_installation/</link>
      <pubDate>Thu, 11 Apr 2019 16:38:13 +0800</pubDate>
      
      <guid>https://gitop.cc/posts/custom_gpdb_installation/</guid>
      <description>下载安装包并解压，得到一个bin文件，从bin文件提取rpm文件 # 前960行为安装脚本 [root@hadoop2 ~]# tail -n +961 greenplum-db-5.16.0-rhel7-x86_64.bin &amp;gt; gpdb.tar.gz 如果集群没有gpadmin用户，可以利用gpssh批量创建gpadmin用户。首先以root用户登陆master节点，解压gpdb.tar.gz： [root@hadoop2 ~]# mkdir gpdb-5.16.0 [root@hadoop2 ~]# tar zxf gpdb.tar.gz -C gpdb-5.16.0 修改gpd</description>
    </item>
    
    <item>
      <title>PostgreSQL数据类型</title>
      <link>https://gitop.cc/posts/postgres_data_type/</link>
      <pubDate>Tue, 22 Jan 2019 16:20:20 +0800</pubDate>
      
      <guid>https://gitop.cc/posts/postgres_data_type/</guid>
      <description>类型介绍 类型分类 PostgreSQL支持的数据类型分类如表： 类型 说明 对比其他数据库 布尔类型 PostgreSQL支持SQL标准的boolean数据类型 与MySQL的BOOL、BOOLEAN类型相同，使用一字节存储空间 数值类型 整数类型有2字节的smallint、4字节的int、8字节</description>
    </item>
    
    <item>
      <title>psql使用介绍</title>
      <link>https://gitop.cc/posts/psql_intro/</link>
      <pubDate>Sat, 19 Jan 2019 19:13:20 +0800</pubDate>
      
      <guid>https://gitop.cc/posts/psql_intro/</guid>
      <description>psql介绍 psql是PostgreSQL中的一个命令行交互式客户端工具，类似Oracle中的命令行工具sqlplus，但它使用起来远比sqlplus方便。 在postgres用户下可以直接输入psql进入到数据库： $ psql psql (10.5 (Debian 10.5-1.pgdg90+1)) Type &amp;#34;help&amp;#34; for help. postgres=# 为什么不需要输入用户名和密码呢?因为在安装P</description>
    </item>
    
    <item>
      <title>SQL入门</title>
      <link>https://gitop.cc/posts/sql_intro/</link>
      <pubDate>Sat, 19 Jan 2019 19:13:04 +0800</pubDate>
      
      <guid>https://gitop.cc/posts/sql_intro/</guid>
      <description>SQL语句分类 DQL(Data Query Language)：数据查询语言，基本就是select语句，用于数据查询。 DML(Data Manipulation Language)：数据操纵语言，包含insert、update、delete三种语句。 DDL(Data Definition Language)：数据定义语言，主要用于创建、删除或修改表、索引等数据库对象。 创建表(cr</description>
    </item>
    
    <item>
      <title>Docker安装gpdb测试数据库</title>
      <link>https://gitop.cc/posts/docker_install_gpdb_dev_env/</link>
      <pubDate>Thu, 17 Jan 2019 15:02:33 +0800</pubDate>
      
      <guid>https://gitop.cc/posts/docker_install_gpdb_dev_env/</guid>
      <description>下载gpdb-dev镜像 pivotaldata/gpdb-dev:centos7是官方的开发镜像，里面已经装好了一些依赖，所以使用起来会方便一点。 docker pull pivotaldata/gpdb-dev:centos7 下载gpdb源码到指定目录 git clone https://github.com/greenplum-db/gpdb.git ~/github 创建目录用于容器数据库 sudo mkdir -p /var/lib/centos-gpdb-dev-data sudo chown xiaoyu:xiaoyu /var/lib/centos-gpdb-dev-data 运行容器 docker run -it --name centos-gpdb-dev -v ~/github/gpdb:/home/gpadmin/gpdb_src -v /var/lib/centos-gpdb-dev-data:/home/gpadmin/data -p 15432:15432 pivotaldata/gpdb-dev:centos7 安装依赖 /home/gpadmin/gpdb_src/README.CentOS.bash 添加动态库搜索</description>
    </item>
    
    <item>
      <title>docker安装greenplum集群</title>
      <link>https://gitop.cc/posts/install-greenplum-in-docker/</link>
      <pubDate>Tue, 21 Aug 2018 19:15:14 +0800</pubDate>
      
      <guid>https://gitop.cc/posts/install-greenplum-in-docker/</guid>
      <description>本文参考这里安装greenplum成功，并记录一下过程 创建docker节点 拉取centos镜像 [xiaoyu@xiaoyu ~]$ docker pull centos 创建几个容器，作为greenplum的节点 [xiaoyu@xiaoyu ~]$ docker run -it --name gp-master centos /bin/bash [xiaoyu@xiaoyu ~]$ docker run -it --name gp-segment1 centos /bin/bash [xiaoyu@xiaoyu ~]$ docker run -it --name gp-segment2 centos /bin/bash [xiaoyu@xiaoyu ~]$ docker run -it --name gp-segment3 centos /bin/bash 配置基础环境 进入每个greenplum节点，配置基础环境 安装相</description>
    </item>
    
    <item>
      <title>MySQL Cookbook 第5章 处理字符串</title>
      <link>https://gitop.cc/posts/mysql-cookbook-5/</link>
      <pubDate>Thu, 07 Apr 2016 22:45:02 +0000</pubDate>
      
      <guid>https://gitop.cc/posts/mysql-cookbook-5/</guid>
      <description>5.0. Introduction A string can be binary or nonbinary. Binary strings are used for raw data such as images, music files, or encrypted values. Nonbinary strings are used for character data such as text and are associated with a character set and collation (sort order). A character set determines which characters are legal in a string. You can choose collations according to whether you need comparisons to be case sensitive or case insensitive, or to use the rules of a particular language. Data types for binary strings are BINARY, VARBINARY, and BLOB. Data types for nonbinary strings are CHAR, VARCHAR, and TEXT, each of which permits CHARACTER SET and COLLATE attributes. You can convert a binary string to a nonbinary string and vice versa, or convert a nonbinary string from one character set or collation to another. You can use</description>
    </item>
    
    <item>
      <title>MySQL Cookbook 第4章 表管理</title>
      <link>https://gitop.cc/posts/mysql-cookbook-4/</link>
      <pubDate>Thu, 07 Apr 2016 21:19:39 +0000</pubDate>
      
      <guid>https://gitop.cc/posts/mysql-cookbook-4/</guid>
      <description>4.0. Introduction This chapter covers topics that relate to creating and populating tables: • Cloning a table • Copying from one table to another • Using temporary tables • Generating unique table names • Determining what storage engine a table uses or converting it from one storage engine to another 4.1. Cloning a Table Problem You want to create a table that has exactly the same structure as an existing table. Solution Use CREATE TABLE &amp;hellip; LIKE to clone the table structure. To also copy some or all of the rows from the original table to the new one, use INSERT INTO &amp;hellip; SELECT . Discussion To create a new table that is just like an existing table, use this statement: CREATE TABLE new_table LIKE original_table; The structure of the new table is the same as that of the original</description>
    </item>
    
    <item>
      <title>MySQL Cookbook 第3章 从表中查询数据</title>
      <link>https://gitop.cc/posts/mysql-cookbook-3/</link>
      <pubDate>Thu, 07 Apr 2016 12:14:29 +0000</pubDate>
      
      <guid>https://gitop.cc/posts/mysql-cookbook-3/</guid>
      <description>3.0. 介绍 本章专注使用SELECT语句从你的数据库获取信息。 3.1. 指定SELECT哪行哪列 问题 你想要从一张表中展示特定行和列。 解决方法 为了指示展示哪一列，在输出列表中指定它。为了指示展示哪一行，使用WHERE语句指定满足条件的行。 讨论 从一个表中显示列最简单的方式是使用SELECT * FROM tb</description>
    </item>
    
    <item>
      <title>MySQL Cookbook 第2章 编写基于MySQL的程序</title>
      <link>https://gitop.cc/posts/mysql-cookbook-2/</link>
      <pubDate>Tue, 05 Apr 2016 21:32:29 +0000</pubDate>
      
      <guid>https://gitop.cc/posts/mysql-cookbook-2/</guid>
      <description>2.0. 介绍 MySQL Client API Architecture Each MySQL programming interface covered in this book uses a two-level architecture: The upper level provides database-independent methods that implement database access in a portable way that’s the same whether you use MySQL, PostgreSQL, Ora‐ cle, or whatever. The lower level consists of a set of drivers, each of which implements the details for a single database system. 2.1. Connecting, Selecting a Database, and Disconnecting Problem You need to establish a connection to the database server and shut down the connection when you’re done. Solution Each API provides routines for connecting and disconnecting. The connection routines require that you provide parameters specifying the host on which the MySQL server is running and the MySQL account to use. You can also</description>
    </item>
    
    <item>
      <title>MySQL Cookbook 第1章 使用mysql客户端</title>
      <link>https://gitop.cc/posts/mysql-cookbook-1/</link>
      <pubDate>Tue, 05 Apr 2016 15:56:30 +0000</pubDate>
      
      <guid>https://gitop.cc/posts/mysql-cookbook-1/</guid>
      <description>1.0 介绍 本章描述了mysql的能力以使你能够更有效的使用它： 设置一个MySQL账户以使用cookbook数据库 指定连接参数和使用配置文件 交互模式和批量模式执行SQL语句 控制mysql输出格式 使用用户定义的变量保存信息 为了你自己试验本书中的例子，你需要一个MySQL用户和一个数据库。</description>
    </item>
    
  </channel>
</rss>